@using MegaDesk;
@{
    var searchTerm = Request.Form["search"];
    if (searchTerm.IsEmpty())
    {
        searchTerm = Request.Form["search"];

    }

    var db = Database.Open("MegaDeskData");
    var queryStr = "SELECT id" +
                    "    , customer_name AS \"Customer\"" +
                    "    , material" +
                    "    , quote_amount " +
                    "    , CAST(CASE WHEN production_days < 14 THEN 1 ELSE 0 END AS bit) AS \"Rush Order\" " +
                    "    , quote_date " +
                    "FROM DeskQuotes ";
    if (!searchTerm.IsEmpty())
    {
        queryStr += "WHERE customer_name LIKE @0 ";
    }
    queryStr += "ORDER BY quote_date DESC";

    var selectedData = db.Query(queryStr, "%" + searchTerm + "%");
    var grid = new WebGrid(source: selectedData, rowsPerPage: 5);
}

<!DOCTYPE html>
<html>
<head>
    <title>Mega Desk</title>

    @RenderPage("~/Shared/HeaderHead.cshtml")
</head>
<body>
    <div class="container">
        <div class="row">
            <header class="col text-center">
                <h1>Mega Desk</h1> <img src="~/MegaDesk.png" alt="" />
            </header>
        </div>
        <div class="row search">
            <div class="col">
                <form method="post">
                    <div class="input-group">
                        <input type="text" name="search"
                               value="@Request.Form["search"]"
                               class="form-control" placeholder="Search" />
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @grid.GetHtml(
                    tableStyle: "table table-hover quotes",
                    columns: grid.Columns(
                        grid.Column(format: @<input type="hidden" name="IDHidden" value="@item["id"]"/>),
                        grid.Column(format: @<a href="~/EditQuote?id=@item.id"><i class="far fa-edit text-warning"></i></a>, canSort: false),
                        grid.Column(columnName: "Customer"),
                        grid.Column(columnName: "Material", format: (item) => (Desk.DeskMaterial)item["material"]),
                        grid.Column(columnName: "Price", format: (item) => item["quote_amount"].ToString("C")),
                        grid.Column(columnName: "Date Quoted", format: (item) => string.Format("{0:MMM dd, yyyy}", item["quote_date"])),
                        grid.Column(format: @<a class="delete-link" href="~/DeleteQuote?id=@item.id"><i class="far fa-trash-alt text-danger"></i></a>, canSort: false)
                 ),
                 footerStyle: "pager",
                 nextText: "Next",
                 previousText: "Prev"
             )
            </div>
        </div>
        <div class="row">
            <div class="col">
                <a href="~/AddQuote.cshtml" class="btn btn-success btn-block">
                    <i class="fas fa-plus-circle"></i> Add Quote
                </a>
            </div>
        </div>
    </div>
    <script src="~/js/Index.js"></script>
</body>
</html>
