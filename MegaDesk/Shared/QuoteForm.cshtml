@using MegaDesk;
@{
    var materialSelectList = new List<SelectListItem>();
    foreach (var item in Enum.GetValues(typeof(Desk.DeskMaterial)))
    {
        SelectListItem tmp = new SelectListItem { Text = item.ToString(), Value = ((int)item).ToString() };
        if (Page.material == tmp.Value)
        {
            tmp.Selected = true;
        }
        materialSelectList.Add(tmp);
    }
}

@if (Page.showError == true)
{
    <div class="alert alert-danger">
        Error! Something went wrong while saving.
        @if(Page.errorMsg != null)
        {
            <p>@Page.errorMsg</p>
        }
    </div>
}

    <form method="POST" class="add-scripture-form">
        <div class="form-group">
            <label>Customer Name</label>
            <input type="text" class="form-control"
                   value="@Page.customerName" name="customer_name" />
            <small class="form-text text-danger">@Html.ValidationMessage("customer_name")</small>
        </div>
        <h3>Desk Design</h3>
        <div class="form-group">
            <label>Width</label>
            <input type="number" class="form-control"
                   value="@Page.width" name="width" />
            <small class="form-text text-danger">@Html.ValidationMessage("width")</small>
        </div>
        <div class="form-group">
            <label>Depth</label>
            <input type="number" class="form-control"
                   value="@Page.depth" name="depth" />
            <small class="form-text text-danger">@Html.ValidationMessage("depth")</small>
        </div>
        <div class="form-group">
            <label>Number of drawers</label>
            <input type="number" class="form-control"
                   value="@Page.numDrawers" name="num_drawers" />
            <small class="form-text text-danger">@Html.ValidationMessage("num_drawers")</small>
        </div>
        <div class="form-group">
            <label>Material</label>
            @Html.DropDownList("material",
              "Select Material",
              materialSelectList,
              new { @class = "form-control" })
            <small class="form-text text-danger">@Html.ValidationMessage("material")</small>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="rush" 
                @if(Page.rushOptions != "" && Page.rushOptions != "14") { 
                    @:checked 
                } />
            <label class="form-check-label">Rush Delivery?</label>
        </div>
        <div class="form-group">
            <label>Days to delivery</label>
            <select name="rush_options" class="form-control" disabled>
                <option value="3"
                    @if(Page.rushOptions == "3") {
                        @:selected 
                    }>3</option>
                <option value="5"
                    @if(Page.rushOptions == "5") {
                        @:selected 
                    }>5</option>
                <option value="7"
                    @if(Page.rushOptions == "7") {
                        @:selected 
                    }>7</option>
            </select>
            <small class="form-text text-danger">@Html.ValidationMessage("rush_options")</small>
        </div>
        <button class="btn btn-primary btn-block">Save</button>
    </form>
    <script>
        (function () {
            let rushCheck = document.getElementById("rush");
            rushCheck.addEventListener("change", setRushOptions);
            function setRushOptions() {
                document.querySelector("[name=rush_options]").disabled = !rushCheck.checked;
            }
            setRushOptions();
        })();
    </script>